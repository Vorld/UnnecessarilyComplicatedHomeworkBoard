{"ast":null,"code":"import _regeneratorRuntime from\"/var/www/hwboard.tk/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/var/www/hwboard.tk/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{setAlert}from'./alert';import{REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,CLEAR_PROFILE}from'./types';//load user\nexport var loadUser=function loadUser(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('/api/auth');case 3:res=_context.sent;dispatch({type:USER_LOADED,payload:res.data});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch({type:AUTH_ERROR});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};//TODO: get rid of curly braces in this function\nexport var register=function register(name,email,password){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,body,res,errors;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({name:name,email:email,password:password});_context2.prev=2;_context2.next=5;return axios.post('/api/users',body,config);case 5:res=_context2.sent;dispatch({type:REGISTER_SUCCESS,payload:res.data});dispatch(loadUser());_context2.next=15;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](2);errors=_context2.t0.response.data.errors;if(errors){errors.forEach(function(error){return dispatch(setAlert(error.msg,'error'));});}dispatch({type:REGISTER_FAIL});case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[2,10]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var login=function login(email,password){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,body,res,errors;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({email:email,password:password});_context3.prev=2;_context3.next=5;return axios.post('/api/auth',body,config);case 5:res=_context3.sent;dispatch({type:LOGIN_SUCCESS,payload:res.data});dispatch(loadUser());_context3.next=15;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](2);errors=_context3.t0.response.data.errors;if(errors){errors.forEach(function(error){return dispatch(setAlert(error.msg,'error'));});}dispatch({type:LOGIN_FAIL});case 15:case\"end\":return _context3.stop();}}},_callee3,null,[[2,10]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};//LOGOUT\nexport var logout=function logout(){return function(dispatch){dispatch({type:CLEAR_PROFILE});dispatch({type:LOGOUT});};};","map":{"version":3,"sources":["/var/www/hwboard.tk/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","loadUser","dispatch","get","res","type","payload","data","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE,\n} from './types';\n\n//load user\nexport const loadUser = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n//TODO: get rid of curly braces in this function\nexport const register = (name, email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\n    }\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\n    }\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n//LOGOUT\nexport const logout = () => (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n"]},"metadata":{},"sourceType":"module"}