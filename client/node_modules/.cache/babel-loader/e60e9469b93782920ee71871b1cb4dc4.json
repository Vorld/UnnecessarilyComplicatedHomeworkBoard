{"ast":null,"code":"import _slicedToArray from\"/var/www/hwboard.tk/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import{connect}from'react-redux';import{addTask}from'../../actions/task';import{Dialog,DialogActions,DialogContent,DialogTitle,TextField,Button,Select,MenuItem,Box}from'@material-ui/core/';var AddTask=function AddTask(_ref){var addTask=_ref.addTask,profile=_ref.profile.profile;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),taskSubject=_useState4[0],setTaskSubject=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),taskName=_useState6[0],setTaskName=_useState6[1];var _useState7=useState(new Date()),_useState8=_slicedToArray(_useState7,2),taskDate=_useState8[0],setTaskDate=_useState8[1];useEffect(function(){if(profile){setTaskSubject(profile.subjects[0]);}},[profile]);var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};var handleTaskSubjectChange=function handleTaskSubjectChange(e){setTaskSubject(e.target.value);};var handleTaskNameChange=function handleTaskNameChange(e){setTaskName(e.target.value);};var handleTaskDateChange=function handleTaskDateChange(e){setTaskDate(e.target.value);};var handleSubmitTask=function handleSubmitTask(e){addTask(taskName,taskSubject,taskDate,profile.subjects);setOpen(false);};return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Button,{fullWidth:true,variant:\"contained\",color:\"primary\",onClick:function onClick(){return handleClickOpen();}},/*#__PURE__*/React.createElement(Box,{letterSpacing:1.5},\"Add Task\")),/*#__PURE__*/React.createElement(Dialog,{open:open,onClose:handleClose,\"aria-labelledby\":\"form-dialog-title\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"form-dialog-title\"},\"Add Task\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(TextField,{autoFocus:true,id:\"name\",label:\"Name\",style:{marginBottom:'20px'},fullWidth:true,onChange:handleTaskNameChange}),/*#__PURE__*/React.createElement(Select,{value:taskSubject,onChange:handleTaskSubjectChange,fullWidth:true,margin:\"normal\",style:{marginBottom:'20px'}},profile.subjects.map(function(subject){return/*#__PURE__*/React.createElement(MenuItem,{value:subject},subject);})),/*#__PURE__*/React.createElement(TextField,{id:\"date\",label:\"Due Date\",type:\"date\",fullWidth:true,onChange:handleTaskDateChange,InputLabelProps:{shrink:true}})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleClose,color:\"primary\"},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{onClick:handleSubmitTask,color:\"primary\"},\"Add Task\"))));};var mapStateToProps=function mapStateToProps(state){return{profile:state.profile};};export default connect(mapStateToProps,{addTask:addTask})(AddTask);","map":{"version":3,"sources":["/var/www/hwboard.tk/client/src/components/tasks/AddTask.js"],"names":["React","Fragment","useState","useEffect","connect","addTask","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Button","Select","MenuItem","Box","AddTask","profile","open","setOpen","taskSubject","setTaskSubject","taskName","setTaskName","Date","taskDate","setTaskDate","subjects","handleClickOpen","handleClose","handleTaskSubjectChange","e","target","value","handleTaskNameChange","handleTaskDateChange","handleSubmitTask","marginBottom","map","subject","shrink","mapStateToProps","state"],"mappings":"iJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,OAAT,KAAwB,oBAAxB,CAEA,OACEC,MADF,CAEEC,aAFF,CAGEC,aAHF,CAIEC,WAJF,CAKEC,SALF,CAMEC,MANF,CAOEC,MAPF,CAQEC,QARF,CASEC,GATF,KAUO,oBAVP,CAYA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAuC,IAApCV,CAAAA,OAAoC,MAApCA,OAAoC,CAAhBW,OAAgB,MAA3BA,OAA2B,CAAhBA,OAAgB,eAC7Bd,QAAQ,CAAC,KAAD,CADqB,wCAC9Ce,IAD8C,eACxCC,OADwC,8BAEfhB,QAAQ,CAAC,EAAD,CAFO,yCAE9CiB,WAF8C,eAEjCC,cAFiC,8BAGrBlB,QAAQ,CAAC,EAAD,CAHa,yCAG9CmB,QAH8C,eAGpCC,WAHoC,8BAIrBpB,QAAQ,CAAC,GAAIqB,CAAAA,IAAJ,EAAD,CAJa,yCAI9CC,QAJ8C,eAIpCC,WAJoC,eAMrDtB,SAAS,CAAC,UAAM,CACd,GAAIa,OAAJ,CAAa,CACXI,cAAc,CAACJ,OAAO,CAACU,QAAR,CAAiB,CAAjB,CAAD,CAAd,CACD,CACF,CAJQ,CAIN,CAACV,OAAD,CAJM,CAAT,CAMA,GAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BT,OAAO,CAAC,IAAD,CAAP,CACD,CAFD,CAIA,GAAMU,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBV,OAAO,CAAC,KAAD,CAAP,CACD,CAFD,CAIA,GAAMW,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,CAAD,CAAO,CACrCV,cAAc,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,CACD,CAFD,CAIA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACH,CAAD,CAAO,CAClCR,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CACD,CAFD,CAIA,GAAME,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACJ,CAAD,CAAO,CAClCL,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CACD,CAFD,CAIA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACL,CAAD,CAAO,CAC9BzB,OAAO,CAACgB,QAAD,CAAWF,WAAX,CAAwBK,QAAxB,CAAkCR,OAAO,CAACU,QAA1C,CAAP,CACAR,OAAO,CAAC,KAAD,CAAP,CACD,CAHD,CAKA,mBACE,oBAAC,QAAD,mBACE,oBAAC,MAAD,EACE,SAAS,KADX,CAEE,OAAO,CAAC,WAFV,CAGE,KAAK,CAAC,SAHR,CAIE,OAAO,CAAE,yBAAMS,CAAAA,eAAe,EAArB,EAJX,eAME,oBAAC,GAAD,EAAK,aAAa,CAAE,GAApB,aANF,CADF,cAUE,oBAAC,MAAD,EACE,IAAI,CAAEV,IADR,CAEE,OAAO,CAAEW,WAFX,CAGE,kBAAgB,mBAHlB,eAKE,oBAAC,WAAD,EAAa,EAAE,CAAC,mBAAhB,aALF,cAME,oBAAC,aAAD,mBACE,oBAAC,SAAD,EACE,SAAS,KADX,CAEE,EAAE,CAAC,MAFL,CAGE,KAAK,CAAC,MAHR,CAIE,KAAK,CAAE,CAAEQ,YAAY,CAAE,MAAhB,CAJT,CAKE,SAAS,KALX,CAME,QAAQ,CAAEH,oBANZ,EADF,cAUE,oBAAC,MAAD,EACE,KAAK,CAAEd,WADT,CAEE,QAAQ,CAAEU,uBAFZ,CAGE,SAAS,KAHX,CAIE,MAAM,CAAC,QAJT,CAKE,KAAK,CAAE,CAAEO,YAAY,CAAE,MAAhB,CALT,EAOGpB,OAAO,CAACU,QAAR,CAAiBW,GAAjB,CAAqB,SAACC,OAAD,qBACpB,oBAAC,QAAD,EAAU,KAAK,CAAEA,OAAjB,EAA2BA,OAA3B,CADoB,EAArB,CAPH,CAVF,cAsBE,oBAAC,SAAD,EACE,EAAE,CAAC,MADL,CAEE,KAAK,CAAC,UAFR,CAGE,IAAI,CAAC,MAHP,CAIE,SAAS,KAJX,CAKE,QAAQ,CAAEJ,oBALZ,CAME,eAAe,CAAE,CACfK,MAAM,CAAE,IADO,CANnB,EAtBF,CANF,cAuCE,oBAAC,aAAD,mBACE,oBAAC,MAAD,EAAQ,OAAO,CAAEX,WAAjB,CAA8B,KAAK,CAAC,SAApC,WADF,cAIE,oBAAC,MAAD,EAAQ,OAAO,CAAEO,gBAAjB,CAAmC,KAAK,CAAC,SAAzC,aAJF,CAvCF,CAVF,CADF,CA6DD,CAlGD,CAyGA,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCzB,OAAO,CAAEyB,KAAK,CAACzB,OADmB,CAAZ,EAAxB,CAIA,cAAeZ,CAAAA,OAAO,CAACoC,eAAD,CAAkB,CAAEnC,OAAO,CAAPA,OAAF,CAAlB,CAAP,CAAsCU,OAAtC,CAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTask } from '../../actions/task';\n\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Button,\n  Select,\n  MenuItem,\n  Box,\n} from '@material-ui/core/';\n\nconst AddTask = ({ addTask, profile: { profile } }) => {\n  const [open, setOpen] = useState(false);\n  const [taskSubject, setTaskSubject] = useState('');\n  const [taskName, setTaskName] = useState('');\n  const [taskDate, setTaskDate] = useState(new Date());\n\n  useEffect(() => {\n    if (profile) {\n      setTaskSubject(profile.subjects[0]);\n    }\n  }, [profile]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleTaskSubjectChange = (e) => {\n    setTaskSubject(e.target.value);\n  };\n\n  const handleTaskNameChange = (e) => {\n    setTaskName(e.target.value);\n  };\n\n  const handleTaskDateChange = (e) => {\n    setTaskDate(e.target.value);\n  };\n\n  const handleSubmitTask = (e) => {\n    addTask(taskName, taskSubject, taskDate, profile.subjects);\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Button\n        fullWidth\n        variant='contained'\n        color='primary'\n        onClick={() => handleClickOpen()}\n      >\n        <Box letterSpacing={1.5}>Add Task</Box>\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='form-dialog-title'\n      >\n        <DialogTitle id='form-dialog-title'>Add Task</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            id='name'\n            label='Name'\n            style={{ marginBottom: '20px' }}\n            fullWidth\n            onChange={handleTaskNameChange}\n          />\n\n          <Select\n            value={taskSubject}\n            onChange={handleTaskSubjectChange}\n            fullWidth\n            margin='normal'\n            style={{ marginBottom: '20px' }}\n          >\n            {profile.subjects.map((subject) => (\n              <MenuItem value={subject}>{subject}</MenuItem>\n            ))}\n          </Select>\n\n          <TextField\n            id='date'\n            label='Due Date'\n            type='date'\n            fullWidth\n            onChange={handleTaskDateChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={handleSubmitTask} color='primary'>\n            Add Task\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  );\n};\n\nAddTask.propTypes = {\n  addTask: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { addTask })(AddTask);\n"]},"metadata":{},"sourceType":"module"}