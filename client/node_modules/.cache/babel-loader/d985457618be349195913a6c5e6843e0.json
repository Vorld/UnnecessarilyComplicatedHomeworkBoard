{"ast":null,"code":"import _regeneratorRuntime from\"/var/www/hwboard.tk/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/var/www/hwboard.tk/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{setAlert}from'./alert';import{GET_PROFILE,UPDATE_PROFILE,PROFILE_ERROR}from'./types';export var getCurrentProfile=function getCurrentProfile(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('/api/profile/me');case 3:res=_context.sent;dispatch({type:GET_PROFILE,payload:res.data});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch({type:PROFILE_ERROR,payload:{msg:_context.t0.response.statusText,status:_context.t0.response.status}});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var updateProfile=function updateProfile(subjects){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,body,res,errors;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({subjects:subjects});_context2.prev=2;_context2.next=5;return axios.post('/api/profile',body,config);case 5:res=_context2.sent;dispatch({type:UPDATE_PROFILE,payload:res.data});dispatch(setAlert('Successfully Updated Subjects','success'));_context2.next=14;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](2);errors=_context2.t0.response.data.errors;if(errors){errors.forEach(function(error){return dispatch(setAlert(error.msg,'error'));});}case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[2,10]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/var/www/hwboard.tk/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","UPDATE_PROFILE","PROFILE_ERROR","getCurrentProfile","dispatch","get","res","type","payload","data","msg","response","statusText","status","updateProfile","subjects","config","headers","body","JSON","stringify","post","errors","forEach","error"],"mappings":"+RAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,SAAzB,CACA,OAASC,WAAT,CAAsBC,cAAtB,CAAsCC,aAAtC,KAA2D,SAA3D,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,kGAAM,iBAAOC,QAAP,gKAEjBN,CAAAA,KAAK,CAACO,GAAN,CAAU,iBAAV,CAFiB,QAE7BC,GAF6B,eAGnCF,QAAQ,CAAC,CAAEG,IAAI,CAAEP,WAAR,CAAqBQ,OAAO,CAAEF,GAAG,CAACG,IAAlC,CAAD,CAAR,CAHmC,+EAKnCL,QAAQ,CAAC,CACPG,IAAI,CAAEL,aADC,CAEPM,OAAO,CAAE,CAAEE,GAAG,CAAE,YAAIC,QAAJ,CAAaC,UAApB,CAAgCC,MAAM,CAAE,YAAIF,QAAJ,CAAaE,MAArD,CAFF,CAAD,CAAR,CALmC,oEAAN,gEAA1B,CAYP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,kGAAc,kBAAOX,QAAP,iJACnCY,MADmC,CAC1B,CACbC,OAAO,CAAE,CACP,eAAgB,kBADT,CADI,CAD0B,CAOnCC,IAPmC,CAO5BC,IAAI,CAACC,SAAL,CAAe,CAAEL,QAAQ,CAARA,QAAF,CAAf,CAP4B,yCASrBjB,CAAAA,KAAK,CAACuB,IAAN,CAAW,cAAX,CAA2BH,IAA3B,CAAiCF,MAAjC,CATqB,QASjCV,GATiC,gBAWvCF,QAAQ,CAAC,CACPG,IAAI,CAAEN,cADC,CAEPO,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAKAL,QAAQ,CAACL,QAAQ,CAAC,+BAAD,CAAkC,SAAlC,CAAT,CAAR,CAhBuC,qFAkBjCuB,MAlBiC,CAkBxB,aAAIX,QAAJ,CAAaF,IAAb,CAAkBa,MAlBM,CAmBvC,GAAIA,MAAJ,CAAY,CACVA,MAAM,CAACC,OAAP,CAAe,SAACC,KAAD,QAAWpB,CAAAA,QAAQ,CAACL,QAAQ,CAACyB,KAAK,CAACd,GAAP,CAAY,OAAZ,CAAT,CAAnB,EAAf,EACD,CArBsC,uEAAd,kEAAtB","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, UPDATE_PROFILE, PROFILE_ERROR } from './types';\n\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({ type: GET_PROFILE, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const updateProfile = (subjects) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ subjects });\n  try {\n    const res = await axios.post('/api/profile', body, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Successfully Updated Subjects', 'success'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}