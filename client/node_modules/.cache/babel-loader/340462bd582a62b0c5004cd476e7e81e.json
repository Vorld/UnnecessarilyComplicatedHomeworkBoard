{"ast":null,"code":"import _regeneratorRuntime from\"/var/www/hwboard.tk/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/var/www/hwboard.tk/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{setAlert}from'./alert';import{GET_TASKS,TASK_ERROR,DELETE_TASK}from'./types';//Get Tasks\nexport var getTasks=function getTasks(subjects){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({subjects:subjects});_context.prev=2;_context.next=5;return axios.post('/api/tasks/me',body,config);case 5:res=_context.sent;dispatch({type:GET_TASKS,payload:res.data});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](2);dispatch({type:TASK_ERROR,payload:{msg:_context.t0.response.statusText,status:_context.t0.response.status}});case 12:case\"end\":return _context.stop();}}},_callee,null,[[2,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};//delete a certain task\nexport var deleteTask=function deleteTask(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.delete(\"/api/tasks/\".concat(id));case 3:dispatch({type:DELETE_TASK,payload:id});dispatch(setAlert('Task Deleted','success',1000));_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);dispatch({type:TASK_ERROR,payload:{msg:_context2.t0.response.statusText,status:_context2.t0.response.status}});case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};//Add Tasks\nexport var addTask=function addTask(name,subject,due,subjects){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,body,errors;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({name:name,subject:subject,due:due});_context3.prev=2;_context3.next=5;return axios.post('/api/tasks',body,config);case 5:dispatch(getTasks(subjects));_context3.next=13;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](2);errors=_context3.t0.response.data.errors;if(errors){errors.forEach(function(error){return dispatch(setAlert(error.msg,'error'));});}dispatch({type:TASK_ERROR,payload:{msg:_context3.t0.request.statusText,status:_context3.t0.request.status}});case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[2,8]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["/var/www/hwboard.tk/client/src/actions/task.js"],"names":["axios","setAlert","GET_TASKS","TASK_ERROR","DELETE_TASK","getTasks","subjects","dispatch","config","headers","body","JSON","stringify","post","res","type","payload","data","msg","response","statusText","status","deleteTask","id","delete","addTask","name","subject","due","errors","forEach","error","request"],"mappings":"+RAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,SAAzB,CAEA,OAASC,SAAT,CAAoBC,UAApB,CAAgCC,WAAhC,KAAmD,SAAnD,CAEA;AACA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,iGAAc,iBAAOC,QAAP,sIAC9BC,MAD8B,CACrB,CACbC,OAAO,CAAE,CACP,eAAgB,kBADT,CADI,CADqB,CAO9BC,IAP8B,CAOvBC,IAAI,CAACC,SAAL,CAAe,CAAEN,QAAQ,CAARA,QAAF,CAAf,CAPuB,uCAUhBN,CAAAA,KAAK,CAACa,IAAN,CAAW,eAAX,CAA4BH,IAA5B,CAAkCF,MAAlC,CAVgB,QAU5BM,GAV4B,eAYlCP,QAAQ,CAAC,CACPQ,IAAI,CAAEb,SADC,CAEPc,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAZkC,+EAiBlCV,QAAQ,CAAC,CACPQ,IAAI,CAAEZ,UADC,CAEPa,OAAO,CAAE,CAAEE,GAAG,CAAE,YAAIC,QAAJ,CAAaC,UAApB,CAAgCC,MAAM,CAAE,YAAIF,QAAJ,CAAaE,MAArD,CAFF,CAAD,CAAR,CAjBkC,oEAAd,gEAAjB,CAwBP;AACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,kGAAQ,kBAAOhB,QAAP,8JAExBP,CAAAA,KAAK,CAACwB,MAAN,sBAA2BD,EAA3B,EAFwB,QAI9BhB,QAAQ,CAAC,CACPQ,IAAI,CAAEX,WADC,CAEPY,OAAO,CAAEO,EAFF,CAAD,CAAR,CAKAhB,QAAQ,CAACN,QAAQ,CAAC,cAAD,CAAiB,SAAjB,CAA4B,IAA5B,CAAT,CAAR,CAT8B,mFAW9BM,QAAQ,CAAC,CACPQ,IAAI,CAAEZ,UADC,CAEPa,OAAO,CAAE,CAAEE,GAAG,CAAE,aAAIC,QAAJ,CAAaC,UAApB,CAAgCC,MAAM,CAAE,aAAIF,QAAJ,CAAaE,MAArD,CAFF,CAAD,CAAR,CAX8B,sEAAR,kEAAnB,CAkBP;AACA,MAAO,IAAMI,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAOC,OAAP,CAAgBC,GAAhB,CAAqBtB,QAArB,kGAAkC,kBAAOC,QAAP,6IACjDC,MADiD,CACxC,CACbC,OAAO,CAAE,CACP,eAAgB,kBADT,CADI,CADwC,CAOjDC,IAPiD,CAO1CC,IAAI,CAACC,SAAL,CAAe,CAAEc,IAAI,CAAJA,IAAF,CAAQC,OAAO,CAAPA,OAAR,CAAiBC,GAAG,CAAHA,GAAjB,CAAf,CAP0C,yCAU/C5B,CAAAA,KAAK,CAACa,IAAN,CAAW,YAAX,CAAyBH,IAAzB,CAA+BF,MAA/B,CAV+C,QAYrDD,QAAQ,CAACF,QAAQ,CAACC,QAAD,CAAT,CAAR,CAZqD,mFAc/CuB,MAd+C,CActC,aAAIV,QAAJ,CAAaF,IAAb,CAAkBY,MAdoB,CAgBrD,GAAIA,MAAJ,CAAY,CACVA,MAAM,CAACC,OAAP,CAAe,SAACC,KAAD,QAAWxB,CAAAA,QAAQ,CAACN,QAAQ,CAAC8B,KAAK,CAACb,GAAP,CAAY,OAAZ,CAAT,CAAnB,EAAf,EACD,CACDX,QAAQ,CAAC,CACPQ,IAAI,CAAEZ,UADC,CAEPa,OAAO,CAAE,CAAEE,GAAG,CAAE,aAAIc,OAAJ,CAAYZ,UAAnB,CAA+BC,MAAM,CAAE,aAAIW,OAAJ,CAAYX,MAAnD,CAFF,CAAD,CAAR,CAnBqD,sEAAlC,kEAAhB","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport { GET_TASKS, TASK_ERROR, DELETE_TASK } from './types';\n\n//Get Tasks\nexport const getTasks = (subjects) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ subjects });\n\n  try {\n    const res = await axios.post('/api/tasks/me', body, config);\n\n    dispatch({\n      type: GET_TASKS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: TASK_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//delete a certain task\nexport const deleteTask = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/tasks/${id}`);\n\n    dispatch({\n      type: DELETE_TASK,\n      payload: id,\n    });\n\n    dispatch(setAlert('Task Deleted', 'success', 1000));\n  } catch (err) {\n    dispatch({\n      type: TASK_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Add Tasks\nexport const addTask = (name, subject, due, subjects) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ name, subject, due });\n\n  try {\n    await axios.post('/api/tasks', body, config);\n\n    dispatch(getTasks(subjects));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\n    }\n    dispatch({\n      type: TASK_ERROR,\n      payload: { msg: err.request.statusText, status: err.request.status },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}