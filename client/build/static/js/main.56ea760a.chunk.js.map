{"version":3,"sources":["actions/alert.js","actions/types.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/layout/Alert.js","components/auth/Login.js","components/auth/Register.js","components/profile-form/CreateProfile.js","actions/subjects.js","actions/profile.js","actions/task.js","components/tasks/AddTask.js","components/tasks/Tasks.js","components/layout/NotFound.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/subjects.js","reducers/task.js","reducers/index.js","utils/SetAuthToken.js","store.js","App.js","serviceWorker.js","index.js"],"names":["setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","loadUser","a","axios","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","style","textDecoration","to","Button","color","onClick","guestLinks","AppBar","Toolbar","Box","flexGrow","Typography","variant","Icon","Container","Grid","container","justify","alignItems","spacing","height","item","xs","fullWidth","size","alerts","alert","length","map","key","severity","login","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","maxWidth","marginTop","CssBaseline","display","flexDirection","startIcon","fontSize","onSubmit","preventDefault","TextField","margin","required","label","autoComplete","autoFocus","mt","register","password2","mb","subjects","profile","loadSubjects","console","log","updateProfile","subjectInputs","setSubjectInputs","useEffect","subject","justifyContent","m","p","CircularProgress","values","push","val","index","mr","FormControl","Select","handleSubjectChange","MenuItem","IconButton","splice","removeSubject","getTasks","statusText","status","addTask","due","request","open","setOpen","taskSubject","setTaskSubject","taskName","setTaskName","Date","taskDate","setTaskDate","handleClose","letterSpacing","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","marginBottom","InputLabelProps","shrink","DialogActions","task","deleteTask","delete","getCurrentProfile","tasks","taskLoading","profileLoading","List","ListItem","className","ListItemText","primary","secondary","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","Chip","ListItemSecondaryAction","edge","_id","align","NotFound","Component","component","rest","render","props","initialState","token","localStorage","getItem","user","combineReducers","action","filter","setAuthToken","defaults","common","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","theme","createMuiTheme","palette","main","link","typography","fontFamily","join","h4","fontWeight","subtitle1","button","App","ThemeProvider","exact","path","Landing","Login","Register","CreateProfile","Tasks","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.56ea760a.chunk.js","sourcesContent":["import { v4 as uuid } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeout = 3000) => (dispatch) => {\n  const id = uuid();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id },\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_ERROR';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const GET_SUBJECTS = 'GET_SUBJECTS';\nexport const GET_TASKS = 'GET_TASKS';\nexport const TASK_ERROR = 'TASK_ERROR';\nexport const ADD_TASK = 'ADD_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE,\n} from './types';\n\n//load user\nexport const loadUser = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n//TODO: get rid of curly braces in this function\nexport const register = (name, email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\n    }\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\n    }\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n//LOGOUT\nexport const logout = () => (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\n//Material UI imports\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Box,\n  Icon,\n} from '@material-ui/core';\n\nexport const Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <Fragment>\n      <Link style={{ textDecoration: 'none' }} to='/tasks'>\n        <Button color='primary'>Tasks</Button>\n      </Link>\n      <Link style={{ textDecoration: 'none' }} to='/create-profile'>\n        <Button color='primary'>Subjects</Button>\n      </Link>\n      <Link style={{ textDecoration: 'none' }} onClick={logout} to='/#!'>\n        <Button color='primary'>Log Out</Button>\n      </Link>\n    </Fragment>\n  );\n\n  const guestLinks = (\n    <Fragment>\n      <Link style={{ textDecoration: 'none' }} to='/register'>\n        <Button color='primary'>Register</Button>\n      </Link>\n      <Link style={{ textDecoration: 'none' }} to='/login'>\n        <Button color='primary'>Log In</Button>\n      </Link>\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <AppBar color='secondary'>\n        <Toolbar>\n          <Box flexGrow={1}>\n            <Typography variant='h4'>\n              <Icon>check</Icon> TASKS\n            </Typography>\n          </Box>\n\n          {!loading && (\n            <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n          )}\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </Fragment>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nimport { Grid, Button, Container } from '@material-ui/core';\n\nconst Landing = ({ isAuthenticated }) => {\n  if (isAuthenticated) {\n    return <Redirect to='/tasks' />;\n  }\n\n  return (\n    <Container>\n      <Grid\n        container\n        justify='center'\n        alignItems='center'\n        spacing={3}\n        style={{ height: '80vh' }}\n      >\n        <Grid item xs={2}>\n          <Link to='/register' style={{ textDecoration: 'none' }}>\n            <Button fullWidth variant='contained' color='primary' size='large'>\n              Register\n            </Button>\n          </Link>\n        </Grid>\n        <Grid item xs={2}>\n          <Link to='/login' style={{ textDecoration: 'none' }}>\n            <Button fullWidth size='large'>\n              Log In\n            </Button>\n          </Link>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, [])(Landing);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Alert as MaterialAlert } from '@material-ui/lab';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map((alert) => (\n    <MaterialAlert key={alert.id} severity={alert.alertType}>\n      {alert.msg}\n    </MaterialAlert>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport '../../App.css';\n\nimport Alert from '../layout/Alert';\n\nimport {\n  Container,\n  Box,\n  TextField,\n  CssBaseline,\n  Typography,\n  Button,\n  Link as MaterialLink,\n  Icon,\n} from '@material-ui/core';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  //Login Redirect\n  if (isAuthenticated) {\n    return <Redirect to='/tasks' />;\n  }\n\n  return (\n    <Container maxWidth='xs' style={{ height: '80vh', marginTop: '32px' }}>\n      <CssBaseline />\n      <Box display='flex' flexDirection='column' style={{ height: '80vh' }}>\n        <Link to='/' style={{ textDecoration: 'none' }}>\n          <Button startIcon={<Icon>keyboard_backspace</Icon>}>\n            Back to home\n          </Button>\n        </Link>\n        <Box fontSize='h4.fontSize'>\n          <b>Log in</b> below\n        </Box>\n        <p>\n          <Typography variant='subtitle1'>\n            Don't have an account?\n            <Link to='/register' style={{ textDecoration: 'none' }}>\n              <MaterialLink style={{ color: '#757ce8' }}>\n                {' '}\n                Register\n              </MaterialLink>\n            </Link>\n          </Typography>\n        </p>\n        <Alert />\n        <form onSubmit={(e) => onSubmit(e)}>\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='email'\n            label='Email Address'\n            name='email'\n            autoComplete='email'\n            autoFocus\n            value={email}\n            onChange={(e) => onChange(e)}\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='password'\n            label='Password'\n            type='password'\n            id='password'\n            autoComplete='current-password'\n            value={password}\n            onChange={(e) => onChange(e)}\n          />\n          <Box mt={2}>\n            <Button\n              size='large'\n              fullWidth\n              variant='contained'\n              color='primary'\n              type='submit'\n            >\n              Log in\n            </Button>\n          </Box>\n        </form>\n      </Box>\n    </Container>\n    // <div className='container'>\n    //   <div className='row'>\n    //     <div className='col s8 offset-s2'>\n    //       <Link to='/' className='btn-flat waves-effect'>\n    //         <i className='material-icons left'>keyboard_backspace</i> Back to\n    //         home\n    //       </Link>\n    //       <div className='col s12' style={{ paddingLeft: '11.250px' }}>\n    //         <h4>\n    //           <b>Log in</b> below\n    //         </h4>\n    //         <p className='grey-text text-darken-1'>\n    //           Don't have an account? <Link to='/register'>Register</Link>\n    //         </p>\n    //       </div>\n    //       <Alert />\n    //       <form onSubmit={(e) => onSubmit(e)}>\n    //         <div className='input-field col s12'>\n    //           <input\n    //             type='email'\n    //             name='email'\n    //             value={email}\n    //             onChange={(e) => onChange(e)}\n    //             required\n    //           />\n    //           <label htmlFor='email'>Email</label>\n    //         </div>\n    //         <div className='input-field col s12'>\n    //           <input\n    //             type='password'\n    //             name='password'\n    //             value={password}\n    //             onChange={(e) => onChange(e)}\n    //             minLength='6'\n    //             required\n    //           />\n    //           <label htmlFor='password'>Password</label>\n    //         </div>\n    //         <div className='col s12' style={{ paddingLeft: '11.250px' }}>\n    //           <button\n    //             style={{\n    //               width: '150px',\n    //               borderRadius: '3px',\n    //               letterSpacing: '1.5px',\n    //               marginTop: '1rem',\n    //             }}\n    //             type='submit'\n    //             value='Login'\n    //             className='btn btn-large waves-effect waves-light hoverable black'\n    //           >\n    //             Login\n    //           </button>\n    //         </div>\n    //       </form>\n    //     </div>\n    //   </div>\n    // </div>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nimport Alert from '../layout/Alert';\n\nimport {\n  Container,\n  Box,\n  TextField,\n  CssBaseline,\n  Typography,\n  Button,\n  Link as MaterialLink,\n  Icon,\n} from '@material-ui/core';\n\nimport '../../App.css';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match!', 'error');\n    } else {\n      register(name, email, password);\n    }\n  };\n\n  //Login Redirect\n  if (isAuthenticated) {\n    return <Redirect to='/tasks' />;\n  }\n\n  return (\n    <Container maxWidth='xs' style={{ height: '80vh', marginTop: '32px' }}>\n      <CssBaseline />\n      <Box display='flex' flexDirection='column' style={{ height: '80vh' }}>\n        <Link to='/' style={{ textDecoration: 'none' }}>\n          <Button startIcon={<Icon>keyboard_backspace</Icon>}>\n            Back to home\n          </Button>\n        </Link>\n        <Box fontSize='h4.fontSize'>\n          <b>Register</b> below\n        </Box>\n        <p>\n          <Typography variant='subtitle1'>\n            Already have an account?\n            <Link to='/register' style={{ textDecoration: 'none' }}>\n              <MaterialLink style={{ color: '#757ce8' }}> Log In</MaterialLink>\n            </Link>\n          </Typography>\n        </p>\n        <Alert />\n        <form onSubmit={(e) => onSubmit(e)}>\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='name'\n            label='Name'\n            name='name'\n            autoComplete='name'\n            autoFocus\n            value={name}\n            onChange={(e) => onChange(e)}\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='email'\n            label='Email Address'\n            name='email'\n            autoComplete='email'\n            autoFocus\n            value={email}\n            onChange={(e) => onChange(e)}\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='password'\n            label='Password'\n            type='password'\n            id='password'\n            autoComplete='current-password'\n            value={password}\n            onChange={(e) => onChange(e)}\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='password2'\n            label='Confirm Password'\n            type='password'\n            id='password'\n            value={password2}\n            onChange={(e) => onChange(e)}\n          />\n          <Box mt={2} mb={2}>\n            <Button\n              size='large'\n              fullWidth\n              variant='contained'\n              color='primary'\n              type='submit'\n            >\n              Register\n            </Button>\n          </Box>\n        </form>\n      </Box>\n    </Container>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loadSubjects } from '../../actions/subjects';\nimport { updateProfile } from '../../actions/profile';\n\nimport Alert from '../layout/Alert';\n\nimport {\n  Box,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  Button,\n  Icon,\n  Select,\n  MenuItem,\n  FormControl,\n  IconButton,\n} from '@material-ui/core';\n\nconst CreateProfile = ({\n  loadSubjects,\n  updateProfile,\n  subjects: { subjects, loading },\n  profile: { profile },\n}) => {\n  //list of subject inputs\n  const [subjectInputs, setSubjectInputs] = useState(['']);\n\n  useEffect(() => {\n    loadSubjects();\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    if (subjects) {\n      setSubjectInputs([subjects[0].subject]);\n    }\n    if (profile) {\n      setSubjectInputs(profile.subjects);\n    }\n  }, [subjects, profile]);\n\n  const handleSubjectChange = (index, e) => {\n    const values = [...subjectInputs];\n    values[index] = e.target.value;\n    setSubjectInputs(values);\n  };\n\n  const addSubject = () => {\n    const values = [...subjectInputs];\n    values.push(subjects[0].subject);\n    setSubjectInputs(values);\n  };\n\n  const removeSubject = (index) => {\n    const values = [...subjectInputs];\n    values.splice(index, 1);\n    setSubjectInputs(values);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    updateProfile(subjectInputs);\n  };\n\n  return loading ? (\n    <Box display='flex' justifyContent='center' m={1} p={1}>\n      <CircularProgress />\n    </Box>\n  ) : (\n    <Container maxWidth='xs' style={{ height: '80vh', marginTop: '32px' }}>\n      <CssBaseline />\n      <Box display='flex' flexDirection='column' style={{ height: '80vh' }}>\n        <Link to='/' style={{ textDecoration: 'none' }}>\n          <Button startIcon={<Icon>keyboard_backspace</Icon>}>\n            Back to tasks\n          </Button>\n        </Link>\n        <Box fontSize='h4.fontSize'>\n          <b>Subjects</b>\n        </Box>\n        <Alert />\n        <p>\n          <form onSubmit={(e) => onSubmit(e)}>\n            <Box mb={2}>\n              <Button\n                fullWidth\n                variant='outlined'\n                color='primary'\n                startIcon={<Icon>add</Icon>}\n                value='Add Subject'\n                onClick={addSubject}\n              >\n                Add\n              </Button>\n            </Box>\n\n            {/* Render the inputs for each subject in subjectInputs */}\n            {subjectInputs.map((val, index) => (\n              <Box mt={1} display='flex'>\n                <Box flexGrow={1} mr={1}>\n                  <FormControl variant='outlined' fullWidth>\n                    <Select\n                      id='subject'\n                      value={subjectInputs[index]}\n                      onChange={(e) => handleSubjectChange(index, e)}\n                      fullWidth\n                    >\n                      {subjects.map((item) => (\n                        <MenuItem key={item.value} value={item.subject}>\n                          {item.subject}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Box>\n                <Box>\n                  <IconButton onClick={() => removeSubject(index)}>\n                    <Icon>clear</Icon>\n                  </IconButton>\n                </Box>\n              </Box>\n            ))}\n\n            <Box mt={2}>\n              <Button\n                variant='contained'\n                color='primary'\n                type='submit'\n                size='large'\n                fullWidth\n              >\n                Update\n              </Button>\n            </Box>\n          </form>\n        </p>\n      </Box>\n    </Container>\n  );\n};\n\nCreateProfile.propTypes = {\n  updateProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  subjects: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  subjects: state.subjects,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { loadSubjects, updateProfile })(\n  CreateProfile\n);\n","import axios from 'axios';\nimport { GET_SUBJECTS } from './types';\n\nexport const loadSubjects = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/subjects');\n    dispatch({ type: GET_SUBJECTS, payload: res.data });\n  } catch (err) {\n    console.log(err);\n    //TODO HANDLE THIS ERROR\n  }\n};\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, UPDATE_PROFILE, PROFILE_ERROR } from './types';\n\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({ type: GET_PROFILE, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const updateProfile = (subjects) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ subjects });\n  try {\n    const res = await axios.post('/api/profile', body, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Successfully Updated Subjects', 'success'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\n    }\n  }\n};\n","import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport { GET_TASKS, TASK_ERROR, DELETE_TASK } from './types';\n\n//Get Tasks\nexport const getTasks = (subjects) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ subjects });\n\n  try {\n    const res = await axios.post('/api/tasks/me', body, config);\n\n    dispatch({\n      type: GET_TASKS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: TASK_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//delete a certain task\nexport const deleteTask = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/tasks/${id}`);\n\n    dispatch({\n      type: DELETE_TASK,\n      payload: id,\n    });\n\n    dispatch(setAlert('Task Deleted', 'success', 1000));\n  } catch (err) {\n    dispatch({\n      type: TASK_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Add Tasks\nexport const addTask = (name, subject, due, subjects) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ name, subject, due });\n\n  try {\n    await axios.post('/api/tasks', body, config);\n\n    dispatch(getTasks(subjects));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\n    }\n    dispatch({\n      type: TASK_ERROR,\n      payload: { msg: err.request.statusText, status: err.request.status },\n    });\n  }\n};\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTask } from '../../actions/task';\n\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Button,\n  Select,\n  MenuItem,\n  Box,\n} from '@material-ui/core/';\n\nconst AddTask = ({ addTask, profile: { profile } }) => {\n  const [open, setOpen] = useState(false);\n  const [taskSubject, setTaskSubject] = useState('');\n  const [taskName, setTaskName] = useState('');\n  const [taskDate, setTaskDate] = useState(new Date());\n\n  useEffect(() => {\n    if (profile) {\n      setTaskSubject(profile.subjects[0]);\n    }\n  }, [profile]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleTaskSubjectChange = (e) => {\n    setTaskSubject(e.target.value);\n  };\n\n  const handleTaskNameChange = (e) => {\n    setTaskName(e.target.value);\n  };\n\n  const handleTaskDateChange = (e) => {\n    setTaskDate(e.target.value);\n  };\n\n  const handleSubmitTask = (e) => {\n    addTask(taskName, taskSubject, taskDate, profile.subjects);\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Button\n        fullWidth\n        variant='contained'\n        color='primary'\n        onClick={() => handleClickOpen()}\n      >\n        <Box letterSpacing={1.5}>Add Task</Box>\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='form-dialog-title'\n      >\n        <DialogTitle id='form-dialog-title'>Add Task</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            id='name'\n            label='Name'\n            style={{ marginBottom: '20px' }}\n            fullWidth\n            onChange={handleTaskNameChange}\n          />\n\n          <Select\n            value={taskSubject}\n            onChange={handleTaskSubjectChange}\n            fullWidth\n            margin='normal'\n            style={{ marginBottom: '20px' }}\n          >\n            {profile.subjects.map((subject) => (\n              <MenuItem value={subject}>{subject}</MenuItem>\n            ))}\n          </Select>\n\n          <TextField\n            id='date'\n            label='Due Date'\n            type='date'\n            fullWidth\n            onChange={handleTaskDateChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={handleSubmitTask} color='primary'>\n            Add Task\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  );\n};\n\nAddTask.propTypes = {\n  addTask: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { addTask })(AddTask);\n","import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getTasks, deleteTask, addTask } from '../../actions/task';\nimport { getCurrentProfile } from '../../actions/profile';\n\nimport Moment from 'react-moment';\n\nimport Alert from '../layout/Alert';\nimport AddTask from './AddTask';\n\nimport {\n  IconButton,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  CircularProgress,\n  Container,\n  Box,\n  Typography,\n  Icon,\n} from '@material-ui/core/';\n\nconst Tasks = ({\n  getTasks,\n  deleteTask,\n  getCurrentProfile,\n  task: { tasks, loading: taskLoading },\n  profile: { profile, loading: profileLoading },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    if (profile) {\n      getTasks(profile.subjects);\n    }\n  }, [getTasks, profile]);\n\n  return (profileLoading && profile === null) || (taskLoading && profile) ? (\n    <Box display='flex' justifyContent='center' m={1} p={1}>\n      <CircularProgress />\n    </Box>\n  ) : (\n    <Container>\n      {profile ? (\n        <Fragment>\n          <Box mt={2} mb={2}>\n            <AddTask />\n          </Box>\n          <Alert />\n\n          {tasks.length > 0 ? (\n            <List>\n              {tasks.map((task) => (\n                <ListItem className='collection-item'>\n                  <ListItemText\n                    primary={task.name}\n                    secondary={\n                      <Moment\n                        calendar={{\n                          sameDay: '[Today]',\n                          nextDay: '[Tomorrow]',\n                          nextWeek: '[This] dddd',\n                          lastDay: '[Yesterday]',\n                          lastWeek: '[Last] dddd',\n                          sameElse: 'DD MMM YYYY',\n                        }}\n                      >\n                        {new Date(task.due)}\n                      </Moment>\n                    }\n                  />\n                  <Chip label={task.subject} />\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      edge='end'\n                      onClick={(e) => deleteTask(task._id)}\n                      className='secondary-content right'\n                    >\n                      <Icon>clear</Icon>\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n            <Box m={1} p={1}>\n              <Typography align='center' variant='subtitle1'>\n                Rejoice! You are (temporarily) free from the clutches of the\n                education system!\n              </Typography>\n            </Box>\n          )}\n        </Fragment>\n      ) : (\n        <Box display='flex' justifyContent='center' m={1} p={1}>\n          <Typography>Set up your subjects!</Typography>\n        </Box>\n      )}\n    </Container>\n  );\n};\n\nTasks.propTypes = {\n  getTasks: PropTypes.func.isRequired,\n  addTask: PropTypes.func.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  task: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  task: state.task,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, {\n  getTasks,\n  deleteTask,\n  addTask,\n  getCurrentProfile,\n})(Tasks);\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div style={{ height: '75vh' }} className='container valign-wrapper'>\n      Not found :(\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuthenticated && !loading ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to='/login' />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case AUTH_ERROR:\n    case LOGOUT:\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case UPDATE_PROFILE:\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case CLEAR_PROFILE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { GET_SUBJECTS } from '../actions/types';\n\nconst initialState = {\n  subjects: null,\n  loading: true,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_SUBJECTS:\n      return {\n        ...state,\n        subjects: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_TASKS, TASK_ERROR, DELETE_TASK, ADD_TASK } from '../actions/types';\n\nconst initialState = {\n  tasks: [],\n  task: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_TASKS:\n      return {\n        ...state,\n        tasks: payload,\n        loading: false,\n      };\n    case ADD_TASK:\n      return {\n        ...state,\n        tasks: [...state.tasks, payload],\n        loading: false,\n      };\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter((task) => task._id !== payload),\n        loading: false,\n      };\n    case TASK_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport subjects from './subjects';\nimport task from './task';\n\nexport default combineReducers({ alert, auth, profile, subjects, task });\n","import axios from 'axios';\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nimport setAuthToken from './utils/SetAuthToken';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nlet currentState = store.getState();\n\nstore.subscribe(() => {\n  // keep track of the previous and current state to compare changes\n  let previousState = currentState;\n  currentState = store.getState();\n  // if the token changes set the value in localStorage and axios headers\n  if (previousState.auth.token !== currentState.auth.token) {\n    const token = currentState.auth.token;\n    setAuthToken(token);\n  }\n});\n\nexport default store;\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport CreateProfile from './components/profile-form/CreateProfile';\nimport Tasks from './components/tasks/Tasks';\nimport NotFound from './components/layout/NotFound';\n\nimport PrivateRoute from './components/routing/PrivateRoute';\n\n//Material UI\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\n\nimport setAuthToken from './utils/SetAuthToken';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\n//Material Theme\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#000000',\n    },\n    secondary: {\n      main: '#ffffff',\n    },\n    link: {\n      main: '#757ce8',\n    },\n  },\n\n  typography: {\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    h4: {\n      fontFamily: 'Raleway',\n      fontWeight: 500,\n    },\n    subtitle1: {\n      color: '#757575',\n    },\n    button: {\n      fontWeight: 400,\n      letterSpacing: 1.5,\n    },\n  },\n});\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Fragment>\n            <Navbar />\n            <Switch>\n              <Route exact path='/' component={Landing} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/register' component={Register} />\n              <PrivateRoute\n                exact\n                path='/create-profile'\n                component={CreateProfile}\n              />\n              <PrivateRoute exact path='/tasks' component={Tasks} />\n              <Route component={NotFound} />\n            </Switch>\n          </Fragment>\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}